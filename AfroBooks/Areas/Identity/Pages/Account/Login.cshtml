@page
@model LoginModel

@{
    ViewData["Title"] = "Log in";
}


<div class="container ">
    <div class="row align-items-center g-lg-5 py-5">
        <div class="col-lg-7 text-center text-lg-start">
            <h1 class="display-4 fw-bold lh-1 mb-3">Log in</h1>
            <p class="col-lg-10 fs-4">Below is an example form built entirely with Bootstrap’s form controls. Each required form group has a validation state that can be triggered by attempting to submit the form without completing it.</p>
        </div>
        <div class="col-md-10 mx-auto col-lg-5">
            <form form id="account" method="post" class="p-4 p-md-5 border rounded-3 bg-light">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-floating mb-3">
                    <input input type="email" id="floatingInput" placeholder="name@example.com" asp-for="Input.Email" class="form-control" autocomplete="email" aria-required="true" />
                    <label asp-for="Input.Email"></label>
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-floating  mb-3">
                    <input type="password" id="floatingPassword" placeholder="Password" asp-for="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" />
                    <label asp-for="Input.Password"></label>
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div>
                    <div class="checkbox">
                        <label asp-for="Input.RememberMe" class="form-label">
                            <input class="form-check-input" asp-for="Input.RememberMe" />
                            @Html.DisplayNameFor(m => m.Input.RememberMe)
                        </label>
                    </div>
                </div>
                <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                <hr class="my-4">
                <section>
                    <p>Use another service to register.</p>
                    @{
                        if ((Model.ExternalLogins?.Count ?? 0) == 0)
                        {

                        }
                        else
                        {
                            <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                                <div>
                                    <p>
                                        @foreach (var provider in Model.ExternalLogins)
                                        {
                                            <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                                        }
                                    </p>
                                </div>
                            </form>
                        }
                    }
                </section>
                <hr />
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                    <p>
                        <a id="resend-confirmation" asp-page="./ResendEmailConfirmation">Resend email confirmation</a>
                    </p>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
